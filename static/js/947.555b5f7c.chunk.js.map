{"version":3,"file":"static/js/947.555b5f7c.chunk.js","mappings":"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","sources":["admin/AdminInnerPages/UpcomingProjects/BannerImages.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getAllBannerImages,\r\n  updateBannerImage,\r\n  addBannerImage,\r\n  deleteBannerImage,\r\n} from \"../../AdminServices\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  TableContainer,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Notification from \"../../../Notification/Notification\";\r\nimport \"./UpcomingProjects.css\";\r\n\r\nfunction BannerImages() {\r\n  const [bannerImages, setBannerImages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [openEditDialog, setOpenEditDialog] = useState(false);\r\n  const [openAddDialog, setOpenAddDialog] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [editImageId, setEditImageId] = useState(null);\r\n  const [deleteImageId, setDeleteImageId] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [notification, setNotification] = useState({\r\n    open: false,\r\n    message: \"\",\r\n    severity: \"success\",\r\n  });\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const images = await getAllBannerImages();\r\n        setBannerImages(images[0].banner_images);\r\n        setLoading(false); // Set loading to false when data is fetched successfully\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false); // Set loading to false even if there's an error\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <CircularProgress />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Typography color=\"error\">Error: {error}</Typography>;\r\n  }\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    const allowedTypes = [\"image/jpeg\", \"image/png\", \"image/jpg\"];\r\n\r\n    if (!allowedTypes.includes(selectedFile.type)) {\r\n      setNotification({\r\n        open: true,\r\n        message: \"Invalid file type. Only JPG, JPEG, and PNG are allowed.\",\r\n        severity: \"error\",\r\n      });\r\n      setFile(null);\r\n      setFileError(\"\");\r\n      return;\r\n    }\r\n\r\n    if (selectedFile.size > 20 * 1024 * 1024) {\r\n      setNotification({\r\n        open: true,\r\n        message: \"File size exceeds 20MB limit.\",\r\n        severity: \"error\",\r\n      });\r\n      setFile(null);\r\n      setFileError(\"\");\r\n      return;\r\n    }\r\n\r\n    setFile(selectedFile);\r\n    setFileError(\"\");\r\n  };\r\n\r\n  const handleUpdateImage = async () => {\r\n    if (!file) {\r\n      setFileError(\"This field is required\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await updateBannerImage(editImageId, file);\r\n      const updatedImages = await getAllBannerImages();\r\n      setBannerImages(updatedImages[0].banner_images);\r\n      setNotification({\r\n        open: true,\r\n        message: response.message,\r\n        severity: \"success\",\r\n      });\r\n      setOpenEditDialog(false);\r\n      setEditImageId(null);\r\n      setFile(null);\r\n    } catch (error) {\r\n      setNotification({\r\n        open: true,\r\n        message: error.message,\r\n        severity: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddImage = async () => {\r\n    if (!file) {\r\n      setFileError(\"This field is required\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await addBannerImage(file);\r\n      const updatedImages = await getAllBannerImages();\r\n      setBannerImages(updatedImages[0].banner_images);\r\n      setNotification({\r\n        open: true,\r\n        message: response.message,\r\n        severity: \"success\",\r\n      });\r\n      setOpenAddDialog(false);\r\n      setFile(null);\r\n    } catch (error) {\r\n      setNotification({\r\n        open: true,\r\n        message: error.message,\r\n        severity: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteImage = async () => {\r\n    try {\r\n      const response = await deleteBannerImage(deleteImageId);\r\n      const updatedImages = await getAllBannerImages();\r\n      setBannerImages(updatedImages[0].banner_images);\r\n      setNotification({\r\n        open: true,\r\n        message: response.message,\r\n        severity: \"success\",\r\n      });\r\n      setOpenDeleteDialog(false);\r\n      setDeleteImageId(null);\r\n    } catch (error) {\r\n      setNotification({\r\n        open: true,\r\n        message: error.message,\r\n        severity: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClickOpenEditDialog = (imageId) => {\r\n    setEditImageId(imageId);\r\n    setOpenEditDialog(true);\r\n  };\r\n\r\n  const handleClickOpenAddDialog = () => {\r\n    setOpenAddDialog(true);\r\n  };\r\n\r\n  const handleClickOpenDeleteDialog = (imageId) => {\r\n    setDeleteImageId(imageId);\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseEditDialog = () => {\r\n    setOpenEditDialog(false);\r\n    setEditImageId(null);\r\n    setFile(null);\r\n  };\r\n\r\n  const handleCloseAddDialog = () => {\r\n    setOpenAddDialog(false);\r\n    setFile(null);\r\n  };\r\n\r\n  const handleCloseDeleteDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n    setDeleteImageId(null);\r\n  };\r\n\r\n  const handleCloseNotification = () => {\r\n    setNotification({ ...notification, open: false });\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Banner Images\r\n      </Typography>\r\n      <Button\r\n        startIcon={<AddIcon />}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpenAddDialog}\r\n        // className=\"add-btn\"\r\n      >\r\n        Add Images\r\n      </Button>\r\n      <Box className=\"set-table\">\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S No.</TableCell>\r\n                <TableCell>Image Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Edit</TableCell>\r\n                <TableCell>Delete</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {bannerImages &&\r\n                bannerImages.map((item, index) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell>{index + 1}</TableCell>\r\n                    <TableCell>{item.img_name}</TableCell>\r\n                    <TableCell>\r\n                      <img\r\n                        src={item.img_path}\r\n                        alt={item.img_name}\r\n                        style={{ maxWidth: \"100px\" }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        startIcon={<EditIcon />}\r\n                        onClick={() => handleClickOpenEditDialog(item.id)}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        startIcon={<DeleteIcon />}\r\n                        onClick={() => handleClickOpenDeleteDialog(item.id)}\r\n                        color=\"error\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n\r\n          {/* // edit banner image  */}\r\n          <Dialog open={openEditDialog} onClose={handleCloseEditDialog}>\r\n            <DialogTitle>Edit Banner Image</DialogTitle>\r\n            <DialogContent>\r\n              <TextField type=\"file\" onChange={handleFileChange} fullWidth />\r\n              {fileError && <Typography color=\"error\">{fileError}</Typography>}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseEditDialog}>Cancel</Button>\r\n              <Button onClick={handleUpdateImage} color=\"primary\">\r\n                Update\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          {/* Add Dialog */}\r\n          <Dialog open={openAddDialog} onClose={handleCloseAddDialog}>\r\n            <DialogTitle>Add Banner Image</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                type=\"file\"\r\n                onChange={handleFileChange}\r\n                name=\"banner_img\"\r\n                fullWidth\r\n              />\r\n              {fileError && <Typography color=\"error\">{fileError}</Typography>}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseAddDialog}>Cancel</Button>\r\n              <Button onClick={handleAddImage} color=\"primary\">\r\n                Add\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          {/* Delete Dialog */}\r\n          <Dialog open={openDeleteDialog} onClose={handleCloseDeleteDialog}>\r\n            <DialogTitle>Confirm Delete</DialogTitle>\r\n            <DialogContent>\r\n              <Typography>\r\n                Are you sure you want to delete this image?\r\n              </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseDeleteDialog}>Cancel</Button>\r\n              <Button onClick={handleDeleteImage} color=\"secondary\">\r\n                Delete\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </TableContainer>\r\n      </Box>\r\n      <Notification\r\n        open={notification.open}\r\n        handleClose={handleCloseNotification}\r\n        alertMessage={notification.message}\r\n        alertSeverity={notification.severity}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BannerImages;\r\n"],"names":["bannerImages","setBannerImages","useState","loading","setLoading","error","setError","openEditDialog","setOpenEditDialog","openAddDialog","setOpenAddDialog","openDeleteDialog","setOpenDeleteDialog","editImageId","setEditImageId","deleteImageId","setDeleteImageId","file","setFile","notification","setNotification","open","message","severity","fileError","setFileError","useEffect","async","images","getAllBannerImages","banner_images","fetchData","_jsx","CircularProgress","_jsxs","Typography","color","children","handleFileChange","event","selectedFile","target","files","includes","type","size","handleCloseEditDialog","handleCloseAddDialog","handleCloseDeleteDialog","Box","variant","component","gutterBottom","Button","startIcon","AddIcon","onClick","handleClickOpenAddDialog","className","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","item","index","img_name","src","img_path","alt","style","maxWidth","EditIcon","handleClickOpenEditDialog","imageId","id","DeleteIcon","handleClickOpenDeleteDialog","Dialog","onClose","DialogTitle","DialogContent","TextField","onChange","fullWidth","DialogActions","response","updateBannerImage","updatedImages","name","addBannerImage","deleteBannerImage","Notification","handleClose","handleCloseNotification","alertMessage","alertSeverity"],"sourceRoot":""}